spring.application.name=templates-backend
server.port=8086

# R2DBC Postgres (override in env as needed)
spring.r2dbc.url=${SPRING_R2DBC_URL:r2dbc:postgresql://localhost:5432/templates}
spring.r2dbc.username=${SPRING_R2DBC_USERNAME:templates}
spring.r2dbc.password=${SPRING_R2DBC_PASSWORD:templates}

# Flyway uses JDBC
spring.flyway.url=${SPRING_FLYWAY_URL:jdbc:postgresql://localhost:5432/templates}
spring.flyway.user=${SPRING_FLYWAY_USER:templates}
spring.flyway.password=${SPRING_FLYWAY_PASSWORD:templates}
spring.flyway.locations=classpath:db/migration
spring.flyway.enabled=true

# Redis
spring.data.redis.host=${SPRING_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}

# Kafka
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=templates-svc
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=java.util.Map
# Allow running without a Kafka broker in dev
spring.kafka.listener.auto-startup=${SPRING_KAFKA_LISTENER_AUTO_STARTUP:false}
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.admin.auto-create=${SPRING_KAFKA_ADMIN_AUTO_CREATE:false}
spring.kafka.admin.fail-fast=${SPRING_KAFKA_ADMIN_FAIL_FAST:false}

# Security basics (placeholder)
app.security.api-keys=dev-key-1

management.endpoints.web.exposure.include=health,info,metrics,prometheus
