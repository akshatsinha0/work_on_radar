services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: analytics
      POSTGRES_USER: analytics
      POSTGRES_PASSWORD: analytics
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:7
    ports:
      - "6379:6379"
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  clickhouse:
    image: clickhouse/clickhouse-server:24.3
    ports:
      - "8123:8123"
      - "9000:9000"
    ulimits:
      nofile: 262144
    volumes:
      - chdata:/var/lib/clickhouse
  app:
    build: .
    depends_on:
      - postgres
      - redis
      - kafka
      - clickhouse
    env_file:
      - .env
    environment:
      # App profile
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      # Postgres inside compose network
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres:5432/analytics
      SPRING_R2DBC_USERNAME: analytics
      SPRING_R2DBC_PASSWORD: analytics
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/analytics
      SPRING_DATASOURCE_USERNAME: analytics
      SPRING_DATASOURCE_PASSWORD: analytics
      SPRING_FLYWAY_URL: jdbc:postgresql://postgres:5432/analytics
      SPRING_FLYWAY_USER: analytics
      SPRING_FLYWAY_PASSWORD: analytics
      # Redis and Kafka inside compose network
      SPRING_REDIS_HOST: redis
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      # Micrometer endpoints for Prometheus
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:-health,info,metrics,prometheus}
      # Kafka topic prefix (overridable via .env)
      KAFKA_TOPIC_PREFIX: ${KAFKA_TOPIC_PREFIX:-pocm.analytics}
      # ClickHouse: default to local container; can be overridden by .env to Cloud URL
      CLICKHOUSE_URL: ${CLICKHOUSE_URL:-jdbc:clickhouse://clickhouse:8123/analytics}
      CLICKHOUSE_USERNAME: ${CLICKHOUSE_USERNAME:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-}
      # Security/keys (optional via .env)
      JWT_SECRET_BASE64: ${JWT_SECRET_BASE64:-}
      SECURITY_API_KEYS: ${SECURITY_API_KEYS:-dev-key-1}
    ports:
      - "8085:8085"
  prometheus:
    image: prom/prometheus:v2.53.0
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - app
  grafana:
    image: grafana/grafana:11.1.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
volumes:
  pgdata:
  chdata:

